# This is the "one-and-only" configuration for OpenDaVINCI.
# Its format is like:
#
# section.key=value
#
# If you have several modules of the same type, the following configuration
# scheme applies:
#
# global.key=value # <-- This configuration applies for all modules.
#
# section.key=value # <-- This configuration applies for all modules of type "section".
#
# section:ID.key=value # <-- This configuration applies for the module "ID" of type "section".


###############################################################################
###############################################################################
#
# GLOBAL CONFIGURATION
#

# The following attributes define the buffer sizes for recording and
# replaying. You need to adjust these parameters depending on the
# camera resolution for example (640x480x3 --> 1000000 for memorySegment,
# 1280x720x3 --> 2800000).
global.buffer.memorySegmentSize = 2800000 # Size of a memory segment in bytes.
global.buffer.numberOfMemorySegments = 4  # Number of memory segments.

# The following key describes the list of modules expected to participate in this --cid session.
global.session.expectedModules = copplar-control-example


###############################################################################
###############################################################################
#
# NEXT, THE CONFIGURATION FOR OpenDaVINCI TOOLS FOLLOWS.
#
###############################################################################
###############################################################################
#
# CONFIGURATION FOR ODSUPERCOMPONENT
#

# If the managed level is pulse_shift, all connected modules will be informed
# about the supercomponent's real time by this increment per module. Thus, the
# execution times per modules are better aligned with supercomponent and the
# data exchange is somewhat more predictable.
odsupercomponent.pulseshift.shift = 10000 # (in microseconds)

# If the managed level is pulse_time_ack, this is the timeout for waiting for
# an ACK message from a connected client.
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)

# If the managed level is pulse_time_ack, the modules are triggered sequentially
# by sending pulses and waiting for acknowledgment messages. To allow the modules
# to deliver their respective containers, this yielding time is used to sleep
# before supercomponent sends the pulse messages the next module in this execution
# cycle. This value needs to be adjusted for networked simulations to ensure
# deterministic execution.
odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds)

# List of modules (without blanks) that will not get a pulse message from odsupercomponent.
odsupercomponent.pulsetimeack.exclude = odcockpit

###############################################################################
###############################################################################

logic-cfsd18-perception-detectcone.threshold = 1.5 #[m]
logic-cfsd18-perception-detectcone.timeDiffMilliseconds = 20 #[ms]
logic-cfsd18-perception-detectcone.checkLidarMilliseconds = 1000 #[ms]
logic-cfsd18-perception-detectcone.senderStamp = 118
logic-cfsd18-perception-detectcone.attentionSenderStamp = 116

###############################################################################
#
# CONFIGURATION FOR VELODYNE16
#
proxy-velodyne16.pointCloudOption = 1 #0: shared point cloud (SPC) only; 1: compact point cloud (CPC) only; 2: both SPC and 
CPC
proxy-velodyne16.SPCOption = 1 # 0: xyz+intensity; 1: distance+azimuth+vertical angle+intensity
proxy-velodyne16.CPCIntensityOption = 0  #0: no intensity, 1: with intensity, 2: both
proxy-velodyne16.numberOfBitsForIntensity = 0  #Range 0-7. Only used when CPC is enabled.
proxy-velodyne16.intensityPlacement = 0 #0: higher bits; 1: lower bits
proxy-velodyne16.distanceEncoding = 1 #0: cm; 1: 2mm
proxy-velodyne16.sharedMemory.name = velodyne16SM
#The total size of the shared memory: MAX_POINT_SIZE * NUMBER_OF_COMPONENTS_PER_POINT * sizeof(float), where MAX_POINT_SIZE 
is the maximum number of points per frame (This upper bound should be set as low as possible, as it affects the shared memory 
size and thus the frame updating speed), NUMBER_OF_COMPONENTS_PER_POIN=4  Recommended values: 
MAX_POINT_SIZE=30000->proxy-velodyne16.sharedMemory.size = 480000
proxy-velodyne16.sharedMemory.size = 480000
proxy-velodyne16.udpReceiverIP = 0.0.0.0
proxy-velodyne16.udpPort = 2368
proxy-velodyne16.calibration = VLP-16.xml


###################################################
# CONFIGURATION FOR ATTENTION
#logic-cfsd18-sensation-attention.startAngle = 22500.0
#logic-cfsd18-sensation-attention.endAngle = 31500.0
logic-cfsd18-sensation-attention.yBoundary = 10 #[m]
logic-cfsd18-sensation-attention.xBoundary = 1.8 #[m]
logic-cfsd18-sensation-attention.groundLayerZ = -0.17  #[m]
logic-cfsd18-sensation-attention.coneHeight = 0.4 #[m]
logic-cfsd18-sensation-attention.connectDistanceThreshold = 0.8 #[m] 0.5
logic-cfsd18-sensation-attention.layerRangeThreshold = 0.06   #[m]
logic-cfsd18-sensation-attention.minNumOfPointsForCone = 2
logic-cfsd18-sensation-attention.maxNumOfPointsForCone = 80
logic-cfsd18-sensation-attention.farConeRadiusThreshold = 0.2
logic-cfsd18-sensation-attention.nearConeRadiusThreshold = 0.25
logic-cfsd18-sensation-attention.zRangeThreshold = 0.08  #[m]
logic-cfsd18-sensation-attention.senderStamp = 116

%RANSAC

logic-cfsd18-sensation-attention.inlierRangeTreshold = 0.1 #[m]
logic-cfsd18-sensation-attention.dotThreshold = 0.3
logic-cfsd18-sensation-attention.inlierFoundTreshold = 80 #Number of inliers
logic-cfsd18-sensation-attention.numberOfIterations =  10
###############################################################################
###############################################################################
odcockpit.directoriesForSharedLibaries = /opt/opendlv.cfsd18

proxy-camera.camera.debug = 1
proxy-camera.camera.name = ZED
proxy-camera.camera.id = 1 # Select here the proper ID for OpenCV
proxy-camera.camera.width = 2560
proxy-camera.camera.height = 720
proxy-camera.camera.bpp = 3
proxy-camera.camera.flipped = 0 # 1=flipped image, 0=not flipped image

# CONFIGURATION FOR ODRECORDER
#
#odrecorder.output = file://recorder.rec
odrecorder.remoteControl = 0 # 0 = no remote control, 1 = allowing remote control (i.e. start and stop recording)
odrecorder.dumpSharedData = 1 # 0 = do not dump shared images and shared images, 1 = otherwise

#odrecorderh264.output = file://recorder.rec
odrecorderh264.remoteControl = 0 # 0 = no remote control, 1 = allowing remote control (i.e. start and stop recording)
odrecorderh264.dumpSharedData = 1 # 0 = do not dump shared images and shared images, 1 = otherwise
odrecorderh264.lossless = 1 # Set to 1 to enable h264 lossless encoding.
odrecorderh264.portbaseforchildprocesses = 29000 # Every spawned child processes is connecting to the parent process via TCP 
using
odcockpit.directoriesForSharedLibaries = /opt
